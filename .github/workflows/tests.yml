name: Tests
on: [push]

jobs:
  test:
    name: Tests
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - ubuntu-20.04
          - ubuntu-22.04
          - ubuntu-24.04
          #- windows-latest
        dc:
          - dmd-latest
          - dmd-2.109.1
          - ldc-latest
          - ldc-1.40.1
        buildConf:
          - Static
          - Dynamic
        include:
          - os: macOS-13
            dc: ldc-1.40.1
            buildConf: Dynamic
          - os: macOS-13
            dc: ldc-1.40.1
            buildConf: Static
          - os: macOS-14
            dc: ldc-1.40.1
            buildConf: Dynamic
          - os: macOS-14
            dc: ldc-1.40.1
            buildConf: Static
          - os: macOS-15
            dc: ldc-1.41.0-beta1
            buildConf: Dynamic
          - os: macOS-15
            dc: ldc-1.41.0-beta1
            buildConf: Static
          - os: macOS-latest
            dc: ldc-1.40.1
            buildConf: Dynamic
          - os: macOS-latest
            dc: ldc-1.40.1
            buildConf: Static

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Install D compiler
        uses: dlang-community/setup-dlang@v1
        with:
          compiler: ${{ matrix.dc }}

      - name: Install system dependencies
        uses: lyricwulf/abc@v1
        with:
          linux: libzip-dev
          macos: libzip

      - name: Try to build the lib
        run: dub build -c "library${{ matrix.buildConf }}"

      - name: Run tests
        run: dub test -b unittest-cov -c "unittest${{ matrix.buildConf }}"

      - name: Cleanup non-project coverage
        run: |
          dub fetch d-cobertura
          dub run d-cobertura@1.0.0 -- - *.lst
          rm -f ./*.lst

      - name: Upload coverage to codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
